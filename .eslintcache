[{"F:\\projects\\spotify-clone\\src\\index.js":"1","F:\\projects\\spotify-clone\\src\\App.js":"2","F:\\projects\\spotify-clone\\src\\reportWebVitals.js":"3","F:\\projects\\spotify-clone\\src\\spotify.js":"4","F:\\projects\\spotify-clone\\src\\DataLayer.js":"5","F:\\projects\\spotify-clone\\src\\reducer.js":"6","F:\\projects\\spotify-clone\\src\\Pages\\LoginPage.js":"7","F:\\projects\\spotify-clone\\src\\Pages\\UserDashboard.js":"8","F:\\projects\\spotify-clone\\src\\components\\LoginPage\\Login.js":"9","F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\Sidebar.js":"10","F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\Footer.js":"11","F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\Body.js":"12","F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\SidebarOptions.js":"13","F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\Header.js":"14","F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\SongRow.js":"15"},{"size":677,"mtime":1608113764328,"results":"16","hashOfConfig":"17"},{"size":1468,"mtime":1609070859013,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":782,"mtime":1608044585015,"results":"20","hashOfConfig":"17"},{"size":461,"mtime":1608114000567,"results":"21","hashOfConfig":"17"},{"size":1413,"mtime":1608664497487,"results":"22","hashOfConfig":"17"},{"size":273,"mtime":1609070066300,"results":"23","hashOfConfig":"17"},{"size":572,"mtime":1609070073042,"results":"24","hashOfConfig":"17"},{"size":5419,"mtime":1609254748449,"results":"25","hashOfConfig":"17"},{"size":1233,"mtime":1609071291384,"results":"26","hashOfConfig":"17"},{"size":2929,"mtime":1609071163816,"results":"27","hashOfConfig":"17"},{"size":4102,"mtime":1609069821889,"results":"28","hashOfConfig":"17"},{"size":372,"mtime":1609069766127,"results":"29","hashOfConfig":"17"},{"size":1632,"mtime":1609069726523,"results":"30","hashOfConfig":"17"},{"size":1505,"mtime":1609069794498,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1iw73bx",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"F:\\projects\\spotify-clone\\src\\index.js",[],["67","68"],"F:\\projects\\spotify-clone\\src\\App.js",["69","70"],"import React, { useEffect } from 'react';\nimport LoginPage from './Pages/LoginPage';\nimport UserDashboard from './Pages/UserDashboard';\nimport './App.css';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useDataLayerValue } from './DataLayer';\n\n  const spotify = new SpotifyWebApi();\n\nfunction App() {\n\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  // useEffect is used to run code based on a given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n     \n\n    if(_token){\n\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      })\n\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        })\n      })\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists\n        })\n      })\n\n\n      spotify.getPlaylist('37i9dQZEVXcLTP4J3V1vN3').then((response) => {  \n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response\n        })\n      })\n\n    }\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {\n        token ? (\n          <UserDashboard \n            spotify = {spotify}\n          />\n        ) : (\n          <LoginPage />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","F:\\projects\\spotify-clone\\src\\reportWebVitals.js",[],"F:\\projects\\spotify-clone\\src\\spotify.js",[],"F:\\projects\\spotify-clone\\src\\DataLayer.js",[],"F:\\projects\\spotify-clone\\src\\reducer.js",[],"F:\\projects\\spotify-clone\\src\\Pages\\LoginPage.js",[],"F:\\projects\\spotify-clone\\src\\Pages\\UserDashboard.js",[],"F:\\projects\\spotify-clone\\src\\components\\LoginPage\\Login.js",[],"F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\Sidebar.js",["71"],"import React from 'react';\r\nimport '../../css/UserDashboard/Sidebar.css';\r\nimport SidebarOptions from './SidebarOptions';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport { useDataLayerValue } from '../../DataLayer';\r\nfunction Sidebar() {\r\n\r\n    const [{ playlists }, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className = 'sidebar'>\r\n\r\n            <img className = 'sidebar__logo'\r\n                src = \"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n                alt = \"spotify\"\r\n            />  \r\n\r\n            <SidebarOptions Icon = {HomeIcon} title = 'Home' />\r\n            <SidebarOptions Icon = {SearchIcon} title = 'Search' />  \r\n            <SidebarOptions Icon = {LibraryMusicIcon} title = 'Your Library' />  \r\n            \r\n            <br />\r\n            <strong className = 'sidebar__title'>PLAYLISTS</strong>\r\n            <hr />\r\n            \r\n            {playlists?.items?.map((playlist) => (\r\n                <SidebarOptions title = {playlist.name} />\r\n            ))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Sidebar;","F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\Footer.js",[],"F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\Body.js",[],"F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\SidebarOptions.js",[],"F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\Header.js",["72"],"import { Avatar } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../../css/UserDashboard/Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useDataLayerValue } from '../../DataLayer';\r\n\r\nfunction Header({ spotify }) {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [query, setQuery] = useState('')\r\n\r\n    useEffect(() => { \r\n\r\n        spotify.searchTracks(`${query}`).then((response) => {\r\n            dispatch({\r\n              type: \"SET_FETCHED_TRACKS\",\r\n              fetched_tracks: response\r\n            })\r\n        })   \r\n\r\n    }, [query]);\r\n\r\n    function updateSearch(event) {\r\n        setSearch(event.target.value);\r\n    }\r\n\r\n    const getSearch = (event) => {\r\n        event.preventDefault();\r\n        setQuery(search);\r\n    }\r\n\r\n    const [{ user }, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className = 'header'>\r\n\r\n            <div className = 'header__left'>\r\n                    <SearchIcon onClick = {getSearch} className = 'searchIcon' titleAccess = 'Click to Search'/>\r\n                    <input\r\n                        placeholder = 'Search for Artists, Songs, or Podcasts'\r\n                        type = 'text'\r\n                        value = {search} \r\n                        onChange = {updateSearch}\r\n                    /> \r\n            </div>\r\n\r\n            <div className = 'header__right'>\r\n                <Avatar src = {user?.images[0]?.url} alt = {user?.display_name} />\r\n                <h4>{user?.display_name}</h4>  \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header;","F:\\projects\\spotify-clone\\src\\components\\UserDashboard\\SongRow.js",["73"],"import React from 'react';\r\nimport '../../css/UserDashboard/SongRow.css';\r\n\r\nfunction SongRow({ track = \"test\" , onSongSelect}) {\r\n\r\n    function convertDurationIntoMinutesAndSeconds(duration) {\r\n        var ms = duration,\r\n        min = Math.floor((ms/1000/60) << 0),\r\n        sec = Math.floor((ms/1000) % 60);\r\n\r\n        // const song_duration = (`${min}:${sec}`);\r\n        const song_duration_1 = (min + ':' + '0' + sec)\r\n        const song_duration_2 = (min + ':' + sec)\r\n        \r\n        if( sec < 10){\r\n            return song_duration_1;\r\n        } else{\r\n            return song_duration_2;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = 'songRow' onClick = {() => onSongSelect(track.id)} >\r\n\r\n            <div className = {'songPicture_andName'}>\r\n                <img className = 'songRow__album'\r\n                    src = {track.album.images[0].url}   \r\n                    alt = \"\"\r\n                />\r\n                <div className = 'songRow__info'>  \r\n                    <h1>{track.name}</h1> \r\n                    <p>\r\n                        {track.artists.map((artist) => artist.name).join(\", \")}\r\n                    </p>\r\n                </div> \r\n            </div>\r\n\r\n            <div className = 'songAlbum'>\r\n                {track.album.name}\r\n            </div>\r\n\r\n            <div className = 'songDuration'>\r\n                {convertDurationIntoMinutesAndSeconds(track.duration_ms)}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SongRow;",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":13,"column":12,"nodeType":"80","messageId":"81","endLine":13,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":55,"column":6,"nodeType":"84","endLine":55,"endColumn":8,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"86","line":10,"column":27,"nodeType":"80","messageId":"81","endLine":10,"endColumn":35},{"ruleId":"82","severity":1,"message":"87","line":21,"column":8,"nodeType":"84","endLine":21,"endColumn":15,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":12,"column":44,"nodeType":"91","messageId":"92","endLine":12,"endColumn":45},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'spotify'. Either include them or remove the dependency array.",["96"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [dispatch]",{"range":"101","text":"102"},"Update the dependencies array to be: [dispatch, query, spotify]",{"range":"103","text":"104"},[1233,1235],"[dispatch]",[616,623],"[dispatch, query, spotify]"]